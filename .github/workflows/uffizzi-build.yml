name: Build PR Image
on:
  pull_request:
    types: [opened, synchronize, reopened, closed, review_requested]

jobs:
  build-ohmyform-ui:
    name: Build and push `OhMyForm UI`
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    if: ${{ github.event.action != 'closed' }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download submodules
        run: |
          git submodule update --init --recursive
          git submodule update --recursive --remote
          ls

      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_WORKER=$(uuidgen)" >> $GITHUB_ENV

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.uffizzi.com/${{ env.UUID_WORKER }}
          tags: |
            type=raw,value=60d

      - name: Build and Push the Image to registry.uffizzi.com - Uffizzi's ephemeral Registry
        uses: docker/build-push-action@v3
        with:
          context: ./ui
          file: ./ui/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha, mode=max

  build-ohmyform-api:
    name: Build and push `OhMyForm API`
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    if: ${{ github.event.action != 'closed' }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download submodules
        run: |
          git submodule update --init --recursive
          git submodule update --recursive --remote
          ls

      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_WORKER=$(uuidgen)" >> $GITHUB_ENV

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.uffizzi.com/${{ env.UUID_WORKER }}
          tags: |
            type=raw,value=60d

      - name: Build and Push the Image to registry.uffizzi.com - Uffizzi's ephemeral Registry
        uses: docker/build-push-action@v3
        with:
          context: ./api
          file: ./api/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha, mode=max

  render-compose-file:
    name: Render Docker Compose File
    # Pass output of this workflow to another triggered by `workflow_run` event.
    runs-on: ubuntu-latest
    needs:
      - build-ohmyform-ui
      - build-ohmyform-api
    outputs:
      compose-file-cache-key: ${{ steps.hash.outputs.hash }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Render Compose File
        run: |
          export UFFIZZI_URL=\$UFFIZZI_URL
          OHMYFORM_UI_IMAGE=${{ needs.build-ohmyform-ui.outputs.tags }}
          export OHMYFORM_UI_IMAGE
          OHMYFORM_API_IMAGE=${{ needs.build-ohmyform-api.outputs.tags }}
          export OHMYFORM_API_IMAGE
          # Render simple template from environment variables.
          envsubst < docker-compose.uffizzi.yml > docker-compose.rendered.yml
          cat docker-compose.rendered.yml
      - name: Upload Rendered Compose File as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: preview-spec
          path: docker-compose.rendered.yml
          retention-days: 2
      - name: Serialize PR Event to File
        run: |
          cat << EOF > event.json
          ${{ toJSON(github.event) }}

          EOF
      - name: Upload PR Event as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: preview-spec
          path: event.json
          retention-days: 2

  delete-preview:
    name: Call for Preview Deletion
    runs-on: ubuntu-latest
    if: ${{ github.event.action == 'closed' }}
    steps:
      # If this PR is closing, we will not render a compose file nor pass it to the next workflow.
      - name: Serialize PR Event to File
        run: |
          cat << EOF > event.json
          ${{ toJSON(github.event) }}

          EOF
      - name: Upload PR Event as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: preview-spec
          path: event.json
          retention-days: 2
